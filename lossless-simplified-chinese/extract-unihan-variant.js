import {readFileSync,writeFileSync} from 'fs'

const lines=readFileSync('Unihan_Variants.txt','utf8').split(/\r?\n/);
const big5={},gb={};
readFileSync('big5.txt','utf8').split('').forEach(ch=>big5[ch]=true); //generated by extract-big5.js
readFileSync('gb.txt','utf8').split('').forEach(ch=>gb[ch]=true); //generated by extract-gb.js
const mapping={};

lines.forEach(line=>{
    const m=line.match(/U\+([\dA-F]{4})\tkSimplifiedVariant\tU\+([\dA-F]{4})/);
    if (m) {
        const tc=String.fromCharCode(parseInt(m[1],16));
        const ch=String.fromCharCode(parseInt(m[2],16));
        if (ch.codePointAt(0)>0x9FFF || ch.codePointAt(0)<0x3400) return;
        if (tc==ch) return; //余=余 ? 0x4F59 有32個字是自己的簡化字
        const sc=(big5[ch]?'<':'')+ch; //big5 有收此簡字 共 123 個
        if (!mapping[sc]) mapping[sc]='';
        if (gb[tc]) {
             mapping[sc]+='>'+tc; //gb 有收此繁字，如「乾」共11個
        } else {
            mapping[sc]=tc+mapping[sc];
        }
    }
})
const out=[];
for (let sc in mapping) {
     out.push(sc.replace(/^</,'')+(sc[0]=='<'?'<':'')+mapping[sc]);
}
const fn='sc-tc-map.js';
console.log(fn,'written',)
writeFileSync(fn,'export const sc2tc=`'+out.join('\n')+'`','utf8');